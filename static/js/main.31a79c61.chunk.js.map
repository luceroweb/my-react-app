{"version":3,"sources":["services/Axios.Show.Service.js","components/Shows/ShowSearch.js","components/Pagination/Pagination2.js","services/userShowList.service.js","images/PosterUnavailable.jpg","components/Shows/ShowDetails.js","components/Modal/index.js","components/Shows/ShowCard.js","images/bookmark.svg","components/Shows/ShowList.js","components/Nav/index.js","index.js","components/UserShowList/index.js"],"names":["apiKey","searchService","AxiosShowService","title","type","page","axios","get","then","res","data","catch","err","console","error","imdbID","ShowSearch","setTitleSearchTerm","setTitleSearchType","useState","titleSearchTerm","titleSearchType","formData","setFormData","onInputChange","e","target","name","value","className","onSubmit","preventDefault","onFormSubmit","placeholder","required","onChange","style","width","marginRight","disabled","Pagination","totalResults","currentPage","setCurrentPage","pageCount","Math","ceil","pageCountArr","i","push","count","startingPages","slice","firstThreeDots","middlePages","max","min","lastThreeDots","endingPages","buildPageList","arr","map","Button","onClick","limitedPageCount","concat","UserShowListService","show","showList","localStorage","getItem","JSON","parse","list","setItem","stringify","filtered","filter","savedShow","ShowDetails","setShow","useEffect","showService","ShowService","a","getShowById","src","Poster","PosterUnavailable","alt","Title","maxWidth","imdbRating","Rated","Runtime","Genre","Plot","Actors","Modal","onClose","children","buttons","id","tabIndex","display","ShowCard","index","selectedShow","setSelectedShow","cursor","maxHeight","background","overflow","ShowList","setShowList","setTotalResults","userShowListService","addShowToList","axiosShowSearch","AxiosShowSearch","getShowsByTitle","Search","BookmarkIcon","height","Nav","Navbar","bg","Container","Brand","Collapse","Link","href","ReactDOM","render","exact","path","component","getShowList","sessionVariableShowList","removeShowFromList","length","document","getElementById"],"mappings":"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","file":"static/js/main.31a79c61.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiKey = '19c7ac68';\r\nconst searchService = 'https://www.omdbapi.com/';\r\n\r\nexport default class AxiosShowService {\r\n\r\n  getShowsByTitle(title,type,page){\r\n    return axios.get(`${searchService}?s=${title}&type=${type}${page?`&page=${page}`:''}&apikey=${apiKey}`)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.error(err));\r\n  }\r\n\r\n  getShowById(imdbID){\r\n    return axios.get(`${searchService}?i=${imdbID}&apikey=${apiKey}`)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.error(err));\r\n  }\r\n  \r\n}","import React, { useState } from 'react';\r\n\r\n// Class based components\r\nconst ShowSearch = ({ setTitleSearchTerm, setTitleSearchType }) => {\r\n  const [ formData, setFormData ] = useState(\r\n    {\r\n      titleSearchTerm: '',\r\n      titleSearchType: '',\r\n    }\r\n  );\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTitleSearchTerm(formData.titleSearchTerm);\r\n    setTitleSearchType(formData.titleSearchType || 'movie');\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col text-center\">\r\n        <form \r\n          className=\"form mb-3\" \r\n          onSubmit={(e) => onFormSubmit(e)}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            name=\"titleSearchTerm\"\r\n            className=\"form-control d-inline\"\r\n            placeholder=\"Enter movie, series, or episode name...\"\r\n            required\r\n            onChange={(e) => onInputChange(e)}\r\n            style={{width:'19em',marginRight:'8px'}}\r\n            value={formData.titleSearchTerm}\r\n          />\r\n          <select\r\n            name=\"titleSearchType\"\r\n            className=\"form-select d-inline\"\r\n            placeholder=\"Type\"\r\n            value={formData.titleSearchType}\r\n            onChange={(e) => onInputChange(e)}\r\n            style={{width:'7em',marginRight:'8px'}}\r\n          >\r\n            <option value=\"\" disabled>Type</option>\r\n            <option value=\"movie\">Movie</option>\r\n            <option value=\"series\">Series</option>\r\n            <option value=\"episode\">Episode</option>\r\n          </select>\r\n          <button type=\"submit\" className=\"btn btn-primary d-inline\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowSearch;","import { Button } from \"react-bootstrap\";\r\n\r\nexport const Pagination = ({ totalResults, currentPage, setCurrentPage }) => {\r\n  // convert page count to array\r\n  const pageCount = (totalResults) ? Math.ceil(totalResults / 10) : [];\r\n  const pageCountArr = [];\r\n  for(let i = 0; i < pageCount; i++){\r\n    pageCountArr.push({ count: i+1 })\r\n  }\r\n\r\n  // Build pagination options\r\n  const startingPages = pageCountArr.slice(0, 2);\r\n\r\n  const firstThreeDots = (currentPage > 3) ? [<span key=\"firstThreeDots\">...</span>] : [];\r\n\r\n  const middlePages = (currentPage > 0) ? \r\n    pageCountArr.slice(Math.max(currentPage - 1,2), Math.min(currentPage + 1,pageCount - 1)) \r\n    : [];\r\n\r\n  const lastThreeDots = (currentPage < pageCount-2) ? [<span key=\"lastThreeDots\">...</span>] : [];\r\n\r\n  const endingPages = pageCountArr.slice(-2);\r\n\r\n  // Build pagination buttons\r\n  const buildPageList = (arr) => {\r\n    return arr.map(({count}) => (\r\n      <Button\r\n        key={count}\r\n        disabled={count === currentPage}\r\n        onClick={() => setCurrentPage(count)}\r\n      >\r\n        {count}\r\n      </Button>\r\n    ))\r\n  }\r\n\r\n  let limitedPageCount = [].concat(\r\n    buildPageList(startingPages),\r\n    firstThreeDots,\r\n    buildPageList(middlePages),\r\n    lastThreeDots,\r\n    buildPageList(endingPages),\r\n  );\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      { (pageCount > 1) &&\r\n        <div>\r\n          <Button key=\"previous\" disabled={currentPage === 1} onClick={() => setCurrentPage(currentPage - 1)}>&lt;</Button>\r\n          <Button disabled>Page {currentPage} of {pageCount}</Button>  \r\n          <Button key=\"next\" disabled={currentPage === pageCount} onClick={() => setCurrentPage(currentPage + 1)}>&gt;</Button>\r\n        </div>\r\n      }\r\n      { (pageCount > 1) &&\r\n        ( pageCount > 7 ? limitedPageCount : buildPageList(pageCountArr) )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","export default class UserShowListService {\r\n  addShowToList(show) {\r\n    let showList = localStorage.getItem('showList');\r\n\r\n    if (showList) {\r\n      showList = JSON.parse(showList);\r\n      showList.list.push(show);\r\n    };\r\n    \r\n    if (!showList) showList = { list: [ show ] };\r\n\r\n    localStorage.setItem('showList', JSON.stringify(showList));\r\n  }\r\n\r\n  removeShowFromList(show) {\r\n    let showList = localStorage.getItem('showList');\r\n    let filtered = null;\r\n\r\n    if (showList) {\r\n      showList = JSON.parse(showList);\r\n      filtered = showList.list.filter(function(savedShow){ \r\n        return savedShow !== show;\r\n      });\r\n    };\r\n\r\n    localStorage.setItem('showList', JSON.stringify({ list: [ filtered ] }));\r\n  }\r\n\r\n  getShowList() {\r\n    let showList = localStorage.getItem('showList');\r\n    if(!showList) return null;\r\n\r\n    return JSON.parse(showList);\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/PosterUnavailable.712e3b5a.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport ShowService from '../../services/Axios.Show.Service';\r\nimport PosterUnavailable from '../../images/PosterUnavailable.jpg';\r\n\r\nconst ShowDetails = ({ imdbID }) => {\r\n  const [ show, setShow ] = useState();\r\n\r\n  useEffect(() => {\r\n    const showService = new ShowService();\r\n    const getShowById = async (imdbID) => {\r\n      const show = await showService.getShowById(imdbID);\r\n      setShow(show);\r\n    }\r\n    getShowById(imdbID);\r\n  },[imdbID]);\r\n\r\n  return show ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 text-center\">\r\n        <img src={(show.Poster === 'N/A') ? PosterUnavailable : show.Poster} alt={`${show.Title} poster`} style={{maxWidth:'100%'}} />\r\n        {(show.Poster === 'N/A') ? <span className=\"text-secondary\">No poster avaialble</span> : null }\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        { show.imdbRating !== 'N/A' && <strong className=\"float-end text-primary h4\">{show.imdbRating}</strong> }\r\n        <h4><strong>{show.Title}</strong></h4>\r\n        { show.Rated !== 'N/A' && <span className=\"badge bg-secondary m-1\">{show.Rated}</span> }\r\n        { show.Runtime !== 'N/A' && <span className=\"badge bg-secondary m-1\">{show.Runtime}</span> }\r\n        { show.Genre !== 'N/A' && <span className=\"badge bg-secondary m-1\">{show.Genre}</span> }\r\n        { show.Plot !== 'N/A' && \r\n          <p><strong>Plot</strong><br/>\r\n          {show.Plot}</p>\r\n        }\r\n        { show.Actors !== 'N/A' && \r\n          <p><strong>Actors</strong><br/>\r\n          {show.Actors}</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  ) : (<h2>Loading...</h2>);\r\n}\r\n\r\nexport default ShowDetails;","import React from 'react';\r\n\r\nconst Modal = ({show, onClose, children, buttons }) => {          \r\n\r\n  return show ? (\r\n    <div className=\"modal fade show\" id=\"exampleModal\" tabIndex=\"-1\" style={{display: 'block'}}>\r\n      <div className=\"modal-dialog modal-lg modal-dialog-scrollable\">\r\n        <div className=\"modal-content p-0\">\r\n          <div className=\"modal-header\">\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={onClose}></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          {children}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {buttons}\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={onClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default Modal;","import ShowDetails from './ShowDetails';\r\nimport Modal from '../Modal';\r\nimport PosterUnavailable from '../../images/PosterUnavailable.jpg';\r\n\r\nconst ShowCard = ({ show, index, buttons, onClose, selectedShow, setSelectedShow }) => {\r\n  return (\r\n    <div className=\"col-lg-3 col-md-4 col-sm-6 mb-4\" key={index}>\r\n      <div className=\"card\" onClick={() => setSelectedShow(show.imdbID)} style={{cursor:'pointer'}}>\r\n        <div className=\"card-img-top\" style={{width:'100%',maxHeight:'150%',background:'no-repeat center',overflow:'hidden'}}>\r\n        <img src={(show.Poster === 'N/A') ? PosterUnavailable : show.Poster} alt={`${show.Title} poster`} style={{width:'100%'}} />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {(show.Poster === 'N/A') ? <span className=\"text-secondary\">No poster avaialble</span> : null }\r\n          <p className=\"card-title\">{ show.Title }</p>\r\n        </div>\r\n      </div>\r\n      { selectedShow && \r\n        <Modal\r\n          show={selectedShow}\r\n          onClose={onClose}\r\n          buttons={buttons}\r\n          children={\r\n            <ShowDetails\r\n              imdbID={selectedShow}\r\n            />\r\n          } \r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCard;","export default __webpack_public_path__ + \"static/media/bookmark.a709b3de.svg\";","import React, { useState, useEffect } from 'react';\r\nimport AxiosShowSearch from '../../services/Axios.Show.Service';\r\nimport ShowSearch from './ShowSearch';\r\nimport Pagination from '../Pagination/Pagination2';\r\nimport UserShowListService from '../../services/userShowList.service';\r\nimport ShowCard from './ShowCard';\r\nimport BookmarkIcon from '../../images/bookmark.svg';\r\n\r\nconst ShowList = () => {\r\n  const [ titleSearchTerm, setTitleSearchTerm ] = useState();\r\n  const [ titleSearchType, setTitleSearchType ] = useState();\r\n  const [ showList, setShowList ] = useState([]);\r\n  const [ totalResults, setTotalResults ] = useState(0);\r\n  const [ currentPage, setCurrentPage ] = useState(1);\r\n  const [ selectedShow, setSelectedShow ] = useState();\r\n\r\n  const userShowListService = new UserShowListService();\r\n\r\n  const onClose = () => setSelectedShow(null);\r\n\r\n  const addShowToList = async (imdbID) => {\r\n    await userShowListService.addShowToList(imdbID);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const axiosShowSearch = new AxiosShowSearch();\r\n    const getShowsByTitle = async (title,type,page) => {\r\n      const showList = await axiosShowSearch.getShowsByTitle(title,type,page);\r\n      setTotalResults(showList?showList.totalResults:0);\r\n      setShowList(showList.Search);\r\n    }\r\n    getShowsByTitle(titleSearchTerm,titleSearchType,currentPage);\r\n  }, [titleSearchTerm,titleSearchType,currentPage]);\r\n\r\n  return(\r\n    <div className=\"container\">\r\n      <ShowSearch \r\n        setTitleSearchTerm={setTitleSearchTerm}\r\n        setTitleSearchType={setTitleSearchType}\r\n      />\r\n      <div className=\"row align-items-top\">\r\n        { showList &&\r\n          showList.map((show, index) => (\r\n            <ShowCard \r\n              show={show} \r\n              index={index} \r\n              onClose={onClose} \r\n              selectedShow={selectedShow} \r\n              addShowToList={addShowToList} \r\n              setSelectedShow={setSelectedShow} \r\n              key={index} \r\n              buttons={\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={() => addShowToList(show)}>\r\n                  <img src={BookmarkIcon} alt=\"\" style={{height:'1em',marginRight:'0.5em'}} />\r\n                  Add To My Shows\r\n                </button>\r\n              } \r\n            />\r\n          ))\r\n        }\r\n        { !titleSearchTerm &&\r\n          <p className=\"text-center\">search for a show above</p>\r\n        }\r\n        { !showList && titleSearchTerm &&\r\n          <p className=\"text-center\">Sorry, we couldn't find a {titleSearchType} called {titleSearchTerm}.<br/>\r\n          Please try again.</p>\r\n        }\r\n      </div>\r\n      <Pagination totalResults={totalResults} currentPage={currentPage} setCurrentPage={setCurrentPage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowList;","import Navbar from 'react-bootstrap/Navbar';\r\nimport RBNav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <Navbar bg='light' className=\"mb-3\">\r\n      <Container>\r\n        <Navbar.Brand>Show Database</Navbar.Brand>\r\n        <Navbar.Collapse>\r\n          <RBNav.Link href=\"/\">Search</RBNav.Link>\r\n          <RBNav.Link href=\"/user-show-list\">My List</RBNav.Link>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ShowList from './components/Shows/ShowList';\r\nimport { UserShowList } from './components/UserShowList';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Nav from './components/Nav';\r\n                         \r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Nav/>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={ShowList} />\r\n      <Route exact path=\"/user-show-list\" component={UserShowList} />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);","import React, { useState, useEffect } from 'react';\r\nimport UserShowListService from '../../services/userShowList.service';\r\nimport ShowCard from '../Shows/ShowCard';\r\nimport BookmarkIcon from '../../images/bookmark.svg';\r\n\r\nexport const UserShowList = () => {\r\n  const [selectedShow, setSelectedShow] = useState();\r\n  const [showList, setShowList] = useState([]);\r\n\r\n  const userShowListService = new UserShowListService();\r\n  \r\n  useEffect(() => {\r\n\r\n    const getShowList = async () => {\r\n      let sessionVariableShowList =  await userShowListService.getShowList();\r\n      sessionVariableShowList = sessionVariableShowList ? sessionVariableShowList.list : [];\r\n      setShowList(sessionVariableShowList);\r\n    };\r\n    getShowList();\r\n\r\n  }, []);\r\n\r\n  const onClose = () => setSelectedShow(null);\r\n\r\n  const removeShowFromList = async (show) => {\r\n    await userShowListService.removeShowFromList(show);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\" text-center\">User Show List</h1>\r\n      <div className=\"row align-items-top\">\r\n        { showList.length ?\r\n          showList.map((show, index) => {\r\n            return <ShowCard \r\n              show={show} \r\n              index={index} \r\n              onClose={onClose} \r\n              selectedShow={selectedShow} \r\n              setSelectedShow={setSelectedShow} \r\n              key={index} \r\n              buttons={\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => removeShowFromList(show)}>\r\n                  <img src={BookmarkIcon} alt=\"\" style={{height:'1em',marginRight:'0.5em'}} />\r\n                  Remove From My Shows\r\n                </button>\r\n              } \r\n            />\r\n          })\r\n        : <p className=\" text-center\">You haven't selected any favorite shows yet</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}